# Use workflow_dispatch so central can trigger and wait reliably.
name: Deploy (central-triggered)
on:
  workflow_dispatch:
    inputs:
      env:     { type: string, required: true }      # dev|qa|uat|production
      version: { type: string, required: true }      # vX.Y.Z tag
      ref:     { type: string, required: false }     # optional branch/SHA for dev-only

concurrency: ${{ github.repository }}-${{ inputs.env }}-${{ inputs.version || inputs.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}                   # attaches this repo's env secrets/approvals
    permissions: { contents: read, id-token: write }
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || inputs.version }}   # tag for releases, branch/SHA for dev-only

      - uses: databricks/setup-cli@v0

      # Auth (choose one, drive via env secrets)
      # - uses: azure/login@v2
      # - uses: aws-actions/configure-aws-credentials@v4
      # - run: databricks configure --host "$DATABRICKS_HOST" --token "$DATABRICKS_TOKEN"

      - name: Validate bundle
        run: databricks bundle validate --target "${{ inputs.env }}"

      - name: Deploy bundle
        run: databricks bundle deploy   --target "${{ inputs.env }}"

      - name: (Optional) Smoke tests
        run: ./tests/smoke.sh "${{ inputs.env }}"
